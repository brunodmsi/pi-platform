{"ast":null,"code":"var _jsxFileName = \"/home/bruno/pi-platform/src/components/Modal/index.tsx\";\nimport React from 'react';\nimport ReactModal from 'react-modal';\nimport './styles.css';\nimport { Container } from './styles';\n\nconst Modal = ({\n  project,\n  isOpen,\n  close\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ReactModal, {\n    isOpen: isOpen,\n    className: \"modal\",\n    overlayClassName: \"background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: project.image_url,\n    alt: project.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, project.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, project.description)), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, project.participants), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 46\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    href: project.github,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, project.github), /*#__PURE__*/React.createElement(\"a\", {\n    href: project.trello,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, project.trello), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: close,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, \"X\"))));\n};\n\nexport default Modal;","map":{"version":3,"sources":["/home/bruno/pi-platform/src/components/Modal/index.tsx"],"names":["React","ReactModal","Container","Modal","project","isOpen","close","image_url","title","description","participants","github","trello"],"mappings":";AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAO,cAAP;AAEA,SAASC,SAAT,QAA0B,UAA1B;;AASA,MAAMC,KAA2B,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,MAAX;AAAmBC,EAAAA;AAAnB,CAAD,KAAgC;AAClE,sBACE,uDACE,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAED,MAApB;AAA4B,IAAA,SAAS,EAAC,OAAtC;AAA8C,IAAA,gBAAgB,EAAC,YAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAED,OAAO,CAACG,SAAlB;AAA6B,IAAA,GAAG,EAAEH,OAAO,CAACI,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,OAAO,CAACI,KAAb,CAFF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIJ,OAAO,CAACK,WAAZ,CAJF,CAFF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOL,OAAO,CAACM,YAAf,CATF,eASqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATrC,eAUE;AAAG,IAAA,IAAI,EAAEN,OAAO,CAACO,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BP,OAAO,CAACO,MAAlC,CAVF,eAWE;AAAG,IAAA,IAAI,EAAEP,OAAO,CAACQ,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BR,OAAO,CAACQ,MAAlC,CAXF,eAaE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEN,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAbF,CADF,CADF,CADF;AAqBD,CAtBD;;AAwBA,eAAeH,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport ReactModal from 'react-modal';\nimport './styles.css';\n\nimport { Container } from './styles';\n\nimport { Project } from '../../pages/Main/index';\ninterface ModalProps {\n  project: Project;\n  isOpen: boolean;\n  close: () => void;\n}\n\nconst Modal: React.FC<ModalProps> = ({ project, isOpen, close }) => {\n  return (\n    <>\n      <ReactModal isOpen={isOpen} className=\"modal\" overlayClassName=\"background\">\n        <Container>\n\n          <header>\n            <img src={project.image_url} alt={project.title}/>\n            <h1>{project.title}</h1>\n\n            <p>{project.description}</p>\n          </header>\n\n          <span>{project.participants}</span><br/>\n          <a href={project.github}>{project.github}</a>\n          <a href={project.trello}>{project.trello}</a>\n\n          <button type=\"button\" onClick={close}>X</button>\n        </Container>\n      </ReactModal>\n    </>\n  );\n}\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}