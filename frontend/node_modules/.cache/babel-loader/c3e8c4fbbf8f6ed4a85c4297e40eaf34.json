{"ast":null,"code":"var _jsxFileName = \"/home/bruno/pi-platform/frontend/src/components/Modal/index.tsx\";\nimport React from 'react';\nimport ReactModal from 'react-modal';\nimport './styles.css';\nimport { Container, Votebox } from './styles';\n\nconst Modal = ({\n  project,\n  isOpen,\n  close\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ReactModal, {\n    isOpen: isOpen,\n    className: \"modal\",\n    overlayClassName: \"background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: project.image_url,\n    alt: project.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, project.title)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, project.description), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, project.participants), /*#__PURE__*/React.createElement(\"a\", {\n    href: project.github,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, project.github), /*#__PURE__*/React.createElement(\"a\", {\n    href: project.trello,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, project.trello), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"iframe\", {\n    width: \"600\",\n    height: \"300\",\n    src: project.video,\n    frameBorder: \"0\",\n    allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Votebox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, \"VOTE AQUI\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  }, \"Insira o seu e-mail para realizar a votacao desse projeto\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Seu e-mail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, \"VOTAR\")))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: close,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"X\"))));\n};\n\nexport default Modal;","map":{"version":3,"sources":["/home/bruno/pi-platform/frontend/src/components/Modal/index.tsx"],"names":["React","ReactModal","Container","Votebox","Modal","project","isOpen","close","image_url","title","description","participants","github","trello","video"],"mappings":";AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,aAAvB;AAIA,OAAO,cAAP;AAEA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,UAAnC;;AASA,MAAMC,KAA2B,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,MAAX;AAAmBC,EAAAA;AAAnB,CAAD,KAAgC;AAClE,sBACE,uDACE,oBAAC,UAAD;AAAY,IAAA,MAAM,EAAED,MAApB;AAA4B,IAAA,SAAS,EAAC,OAAtC;AAA8C,IAAA,gBAAgB,EAAC,YAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAED,OAAO,CAACG,SAAlB;AAA6B,IAAA,GAAG,EAAEH,OAAO,CAACI,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,OAAO,CAACI,KAAb,CAFF,CAFF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIJ,OAAO,CAACK,WAAZ,CAPF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOL,OAAO,CAACM,YAAf,CATF,eAUE;AAAG,IAAA,IAAI,EAAEN,OAAO,CAACO,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BP,OAAO,CAACO,MAAlC,CAVF,eAWE;AAAG,IAAA,IAAI,EAAEP,OAAO,CAACQ,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BR,OAAO,CAACQ,MAAlC,CAXF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,KAAK,EAAC,KADR;AAEE,IAAA,MAAM,EAAC,KAFT;AAGE,IAAA,GAAG,EAAER,OAAO,CAACS,KAHf;AAIE,IAAA,WAAW,EAAC,GAJd;AAIkB,IAAA,KAAK,EAAC,yEAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,CAHF,CARF,CAbF,eA+BE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAEP,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SA/BF,CADF,CADF,CADF;AAuCD,CAxCD;;AA0CA,eAAeH,KAAf","sourcesContent":["import React, { useState } from 'react';\nimport ReactModal from 'react-modal';\nimport { Form } from '@unform/web';\nimport { FormHandles } from '@unform/core';\nimport * as Yup from 'yup';\nimport './styles.css';\n\nimport { Container, Votebox } from './styles';\n\nimport { Project } from '../../pages/Main/index';\ninterface ModalProps {\n  project: Project;\n  isOpen: boolean;\n  close: () => void;\n}\n\nconst Modal: React.FC<ModalProps> = ({ project, isOpen, close }) => {\n  return (\n    <>\n      <ReactModal isOpen={isOpen} className=\"modal\" overlayClassName=\"background\">\n        <Container>\n\n          <header>\n            <img src={project.image_url} alt={project.title}/>\n            <h1>{project.title}</h1>\n          </header>\n\n          <p>{project.description}</p>\n\n          <span>{project.participants}</span>\n          <a href={project.github}>{project.github}</a>\n          <a href={project.trello}>{project.trello}</a>\n\n          <div>\n            <iframe\n              width=\"600\"\n              height=\"300\"\n              src={project.video}\n              frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n            ></iframe>\n\n            <Votebox>\n              <h1>VOTE AQUI</h1>\n              <p>Insira o seu e-mail para realizar a votacao desse projeto</p>\n              <form>\n                <input type=\"text\" placeholder=\"Seu e-mail\"/>\n                <button type=\"submit\">VOTAR</button>\n              </form>\n            </Votebox>\n          </div>\n\n          <button type=\"button\" onClick={close}>X</button>\n        </Container>\n      </ReactModal>\n    </>\n  );\n}\n\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}